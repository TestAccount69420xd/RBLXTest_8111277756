if not game:IsLoaded() then
    game.Loaded:Wait()
end

if game.GameId ~= 943242049 then
    return
end

if AntHaxxLoaded == nil then
    getgenv().AntHaxxLoaded = false
else
    return
end

if AntHaxxLoaded == true then
    return
end

--// VARS
local Players = game:GetService('Players')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local UserInputService = game:GetService('UserInputService')
local CoreGui = game:GetService('CoreGui')
local StarterGui = game:GetService('StarterGui')
local RunService = game:GetService('RunService')
local VirtualUser = game:GetService('VirtualUser')
local Lighting = game:GetService('Lighting')
local CollectionService = game:GetService('CollectionService')

local LP = Players.LocalPlayer
local LC = nil
local LHRP = nil
local LHUM = nil
local IsInMenu = false
local IsLarvae = false
local Mouse = LP:GetMouse()
local BiteRemote = ReplicatedStorage.Remotes['Biterzzzzzz']

local AHSettings = {
    InfHungerThirst = false,
    InstantEatTroph = false,
    SpeedMultiplier = 1,
    FastEat = false,
    FastDrink = false,
    WaterNoclip = false,
    Noclip = false,
    CClickTP = false,
    InfJump = false,
    FlyJump = false,
    JumpAsQueen = false,
    FreeCam = {Enabled = false, FreeCamSpeed = 2},
    Fly = {Enabled = false, FlySpeed = 50, Mode = 'Normal'},
    InfCameraZoom = false,
    Autofarm = {Enabled = false, FarmBeetleLarvaes = false, FarmPlayers = false, IgnoreCarp = false, IgnoreFire = false, IgnoreYCA = false, IgnoreSpider = false, IgnoreQueens = true, IgnoreAnts = false, IgnoreLarvaes = false, KillDelay = false, HideUsername = false, KillDelayWaitTime = 0},
    KillAura = false,
    AntiVoid = true,
    LeaveOnModJoin = false,
    ESP = {Carp = false, Fire = false, YCA = false, Spider = false, BeetleLarvae = false},
    RemoveAntCorpses = false,
    RemoveAntLarvaeCorpses = false,
    AutoSpawnIfNoQueen = {Carp = false, Fire = false, YCA = false},
    AutoSpawn = {Carp = false, Fire = false, YCA = false}
}

local AHVars = {
    Frame = 0,
    MaxSpeed = 200,
    KillTimer = 0,
    TPTargetPos = nil,
}

if UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled and not UserInputService.MouseEnabled then
	return LP:Kick('Mobile is not supported as of now, sorry about that.')
end

local StartUpSG = Instance.new('ScreenGui')
local StartUpTL = Instance.new('TextLabel')
local StartUpTL2 = Instance.new('TextLabel')

StartUpSG.ResetOnSpawn = false
StartUpSG.IgnoreGuiInset = true
StartUpSG.DisplayOrder = 999999999
StartUpSG.ZIndexBehavior = 'Global'
StartUpSG.Parent = LP.PlayerGui

StartUpTL.ZIndex = 2
StartUpTL.AnchorPoint = Vector2.new(0.5, 0.5)
StartUpTL.Size = UDim2.new(0.9, 0, 0.5, 0)
StartUpTL.Position = UDim2.new(0.5, 0, 0.5, 0)
StartUpTL.BackgroundTransparency = 1
StartUpTL.TextScaled = true
StartUpTL.TextStrokeTransparency = 0
StartUpTL.TextColor3 = Color3.fromRGB(255, 255, 255)
StartUpTL.Text = 'üòä ANTHAXX üòä\nJoin our discord to report any bugs or give suggestions (discord.gg/anfCx638Fh).\n\n‚ö†Ô∏è WARNING ‚ö†Ô∏è\nPlease use alts when exploiting here, you\'ll get banned no matter what you do as the mods have no life. If you need alts that are over 30 days, we have provided a decent altgen in our discord.\n\nüò° ANTI-CHEAT NOTICE üò°\nEverything speed based (like speedhacking and flying) now is based off of your base speed, so I would only recommend being ANY SPIDER or ANY YELLOW ANT if you want to go fast. Also try not to kill while noclipping, or you may be kicked.\n\n!!! Please read everything here if you haven\'t yet, it is important. !!!\n\nPress Y to continue\nPress N to exit'
StartUpTL.Parent = StartUpSG

StartUpTL2.Text = ''
StartUpTL2.Size = UDim2.new(1, 0, 1, 0)
StartUpTL2.BackgroundTransparency = 0.5
StartUpTL2.Parent = StartUpSG
    
local StartupInputListener; StartupInputListener = UserInputService.InputBegan:Connect(function(key, isTyping)
    if isTyping == true then return end

    if key.KeyCode == Enum.KeyCode.Y then
        AntHaxxLoaded = true
        StartupInputListener:Disconnect()
        StartUpSG:Destroy()
    elseif key.KeyCode == Enum.KeyCode.N then
        StartupInputListener:Disconnect()
        StartUpSG:Destroy()
    end
end)

while AntHaxxLoaded == false do
    task.wait()
end

--// FUNCTIONS & STUFF
local function FlyHandler()
    if not LHUM then
        return Vector3.zero
    end

    if LHUM.MoveDirection == Vector3.zero then
        return LHUM.MoveDirection
    end

    local Direction = (workspace.CurrentCamera.CFrame * CFrame.new((CFrame.new(workspace.CurrentCamera.CFrame.Position, workspace.CurrentCamera.CFrame.Position + Vector3.new(workspace.CurrentCamera.CFrame.LookVector.X, 0, workspace.CurrentCamera.CFrame.LookVector.Z)):VectorToObjectSpace(LHUM.MoveDirection)))).Position - workspace.CurrentCamera.CFrame.Position
    if Direction == Vector3.zero then
        return Direction
    end

    return Direction.Unit
end

local function CreateESP(model, color)
    if not model:FindFirstChild('ESP') then
        local ESPInstance = Instance.new('BoolValue')
        ESPInstance.Name = 'ESP'
        ESPInstance.Parent = model

        for i, v in model:GetDescendants() do
            if v:IsA('BasePart') and v.Name == 'Head' and not v:FindFirstChild('NameESP') then
                local BillboardGui = Instance.new('BillboardGui')
                BillboardGui.Name = 'NameESP'
                BillboardGui.AlwaysOnTop = true
                BillboardGui.Size = UDim2.new(1, 80, 1, 8)
                BillboardGui.StudsOffset = Vector3.new(0, v.Size.Y * 2, 0)
                BillboardGui.Adornee = v
                BillboardGui.Parent = v

                local TextLabel = Instance.new('TextLabel')
                TextLabel.BackgroundTransparency = 1
                TextLabel.Size = UDim2.new(1, 0, 1, 0)
                TextLabel.Font = Enum.Font.Code
                TextLabel.Text = model.Parent.Name..' '..model.Name
                TextLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
                TextLabel.TextStrokeTransparency = 0.8
                TextLabel.TextColor3 = color
                TextLabel.TextScaled = true
                TextLabel.Parent = BillboardGui
            end

            if v:IsA('BasePart') and not v:FindFirstChild('ESP') then
                local ESP = Instance.new('BoxHandleAdornment')
                ESP.Name = 'ESP'
                ESP.AlwaysOnTop = true
                ESP.ZIndex = 0
                ESP.Size = v.Size
                ESP.Transparency = v.Transparency + 0.8
                ESP.Color3 = color
                ESP.Parent = v
                ESP.Adornee = v
            end
        end
    else
        if model:FindFirstChild('Head') and model.Head:FindFirstChild('NameESP') and model.Head.NameESP:FindFirstChild('TextLabel') then
            model.Head.NameESP.TextLabel.Text = model.Parent.Name..' '..model.Name
        end
    end
end

local function RemoveESP(model)
    if model:FindFirstChild('ESP') then
        model.ESP:Destroy()

        for i, v in model:GetDescendants() do
            if v:IsA('BoxHandleAdornment') and v.Name == 'ESP' then
                v:Destroy()
            end

            if v:IsA('BillboardGui') and v.Name == 'NameESP' then
                v:Destroy()
            end
        end
    end
end

local function TagInstance(instance)
    if instance == nil then
        for i, v in workspace:GetDescendants() do
            if v:IsA('Model') and v:FindFirstChild('Humanoid') then
                v:AddTag('Character')
            end
        end
    else
        if instance:IsA('Model') and instance:FindFirstChild('Humanoid') then
            instance:AddTag('Character')
        end
    end
end

local function SetCharacterVelocity(vel)
    for i, v in LC:GetDescendants() do
        if v:IsA('BasePart') then
            v.Velocity = vel
        end
    end
end

local Old1
Old1 = hookmetamethod(game, '__namecall', function(...)
    local Method = getnamecallmethod()
    
    -- Bypassing Kicks
    if Method == 'Kick' then 
        return
    end
    
    return Old1(...)
end)

LP.Idled:Connect(function()

    -- Anti AFK
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())

end)

local AnnouncementTimes = 0 -- chatted fires twice for some reason wtf
LP.Chatted:Connect(function(msg)
    local MessageLowered = string.lower(msg)
    local Args = string.split(MessageLowered, ' ')
    
    -- Announcement Prefix
    if Args[1] == '/a' then
        AnnouncementTimes += 1
        if AnnouncementTimes < 2 then
            ReplicatedStorage.Remotes.StartVote:FireServer('Shoutout', '', string.sub(msg, 3))
        else
            AnnouncementTimes = 0
        end
    end

end)

LP.PlayerGui.Chat.Frame.ChatChannelParentFrame.Frame_MessageLogDisplay.Scroller.ChildAdded:Connect(function(child)

    -- Chat Color Coding
    if child:IsA('Frame') then
        child:WaitForChild('TextLabel'):WaitForChild('TextButton')

        local Sender = string.gsub(child.TextLabel.TextButton.Text,'[%^%$%(%)%%%.%[%]%*%+%-%?% :]', '')
        local SenderPlayer = nil

        for i, v in Players:GetPlayers() do
            if v.DisplayName == Sender then
                SenderPlayer = v
            end
        end
        
        child.TextLabel.TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        
        if SenderPlayer and SenderPlayer.Character ~= nil then
            if SenderPlayer.Character:IsDescendantOf(workspace.Ant['Carpenter Ant']) then
                child.TextLabel.TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
            elseif SenderPlayer.Character:IsDescendantOf(workspace.Ant['Fire Ant']) then
                child.TextLabel.TextButton.TextColor3 = Color3.fromRGB(255, 0, 0)
            elseif SenderPlayer.Character:IsDescendantOf(workspace.Ant['Yellow Crazy Ant']) then
                child.TextLabel.TextButton.TextColor3 = Color3.fromRGB(255, 255, 0)
            elseif (SenderPlayer.Character:IsDescendantOf(workspace.Special.Spider) or SenderPlayer.Character:IsDescendantOf(workspace.Special.Spiderling)) then
                child.TextLabel.TextButton.TextColor3 = Color3.fromRGB(57, 57, 57)
            elseif SenderPlayer.Character:IsDescendantOf(workspace.Special.BroodMother) then
                child.TextLabel.TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
            end
        end
    end

end)

Mouse.Button1Down:Connect(function()

    -- C + Click TP
    if AHSettings.CClickTP == true and UserInputService:IsKeyDown(Enum.KeyCode.C) and LHRP then
        AHVars.TPTargetPos = Mouse.Hit.p + Vector3.yAxis * (LHRP.Size / 1.8)
    end

end)

UserInputService.InputBegan:Connect(function(key, isTyping)
    if isTyping == true then return end

    -- Infinite Jump
    if key.KeyCode == Enum.KeyCode.Space and AHSettings.InfJump == true and LHUM then
        LHUM:ChangeState('Seated')
        task.wait()
        LHUM:ChangeState('Jumping')
    end

    -- Hold F To Dig
    if key.KeyCode == Enum.KeyCode.F and LHUM then
        while UserInputService:IsKeyDown(Enum.KeyCode.F) do
            ReplicatedStorage.Remotes.Dig:FireServer(Mouse.Hit.p, 'Flatten')
            task.wait()
        end
    end

    -- H Force Place Dirt
    if key.KeyCode == Enum.KeyCode.H and LHUM then
        ReplicatedStorage.Remotes.Dig:FireServer(Mouse.Hit.p, 'Fill')
    end

    -- Troph
    if key.KeyCode == Enum.KeyCode.T then
        ReplicatedStorage.Remotes.Trophallaxis:FireServer()
    end

end)

RunService.Heartbeat:Connect(function()

    -- Updating AHVars.Frame
    AHVars.Frame += 1

    -- Updating LC
    if LP.Character then
        LC = LP.Character
    else
        LC = nil
    end

    -- Updating LHRP
    if LC and LC:FindFirstChild('HumanoidRootPart') then
        LHRP = LC.HumanoidRootPart
    else
        LHRP = nil
    end
    
    -- Updating LHUM
    if LC and LC:FindFirstChild('Humanoid') then
        LHUM = LC.Humanoid
    else
        LHUM = nil
    end

    -- Updating IsInMenu
    if LP.PlayerGui:FindFirstChild('Menu') then
        IsInMenu = true
    else
        IsInMenu = false
    end

    -- Updating IsLarvae
    if LC and LC:FindFirstChild('Reward') then
        IsLarvae = true
    else
        IsLarvae = false
    end

    -- Disabling AntCore
    if LC and LC:FindFirstChild('AntCore') then
        -- LC.AntCore.Enabled = false
    end

    -- Updating AHVars.KillTimer
    AHVars.KillTimer += 1

    -- Updating AHSettings.Autofarm.Enabled
    if (AHSettings.Autofarm.FarmBeetleLarvaes == true or AHSettings.Autofarm.FarmPlayers == true) then
        AHSettings.Autofarm.Enabled = true
    else
        AHSettings.Autofarm.Enabled = false
    end

    -- SetCoreGuiEnabled
    StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
    StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, true)

    -- Anti Camera Glitch
    if LHRP and AHSettings.FreeCam.Enabled == false then
        workspace.CurrentCamera.CameraSubject = LC
        workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
    end

    -- No Spider Spawn Cooldown
    if LP:FindFirstChild('timer') then
        LP.timer:Destroy()
    end

    -- Disabling Menu If Spawned
    if LHRP and IsInMenu then
        LP.PlayerGui.Menu:Destroy()
        Lighting.Blu.Enabled = false
        Lighting.DepthOfField.Enabled = false
        workspace.Music.Volume = 0.25
    end

    -- Speed Multiplier
    if LHUM then
        if LC:FindFirstChild('Configuration') and LC.Configuration:FindFirstChild('sprintSpeed') then
            if LC:FindFirstChild('Wings') and AHSettings.SpeedMultiplier >= 1.75 then
                LHUM.WalkSpeed = 50
            else
                LHUM.WalkSpeed = LC.Configuration.sprintSpeed.Value * AHSettings.SpeedMultiplier
            end
        end
    end

    -- Instantly Eat Trophs
    if AHSettings.InstantEatTroph == true and LHUM and IsLarvae then
        for i, v in CollectionService:GetTagged('Character') do
            if v ~= LC and v:FindFirstChild('Carrier') and v.Carrier:FindFirstChildOfClass('ProximityPrompt') then
                v.Carrier:FindFirstChildOfClass('ProximityPrompt').HoldDuration = 0
            end
        end
    end

    -- Water Noclip
    if LHUM then
        if (AHSettings.WaterNoclip == true or AHSettings.Autofarm.Enabled == true) then
            LHUM:SetStateEnabled(Enum.HumanoidStateType.Swimming, false)
        else
            LHUM:SetStateEnabled(Enum.HumanoidStateType.Swimming, true)
        end
    end

    -- Noclip
    if LHUM then
        for i, v in LC:GetDescendants() do
            if v:IsA('BasePart') then
                if not v:GetAttribute('CanCollideOrigin') then
                    v:SetAttribute('CanCollideOrigin', v.CanCollide)
                end

                if (AHSettings.Noclip == true or AHVars.TPTargetPos ~= nil or AHSettings.Autofarm.Enabled == true) then
                    v.CanCollide = false
                else
                    v.CanCollide = v:GetAttribute('CanCollideOrigin')
                end
            end
        end
    end

    -- FreeCam
    if AHSettings.FreeCam.Enabled == true then
        if not workspace:FindFirstChild('FreeCamPos') then
            local FreeCamPos = Instance.new('Part')
            FreeCamPos.Name = 'FreeCamPos'
            FreeCamPos.Anchored = true
            FreeCamPos.Size = Vector3.new(1, 1, 1)
            FreeCamPos.Transparency = 1
            FreeCamPos.CanCollide = false
            FreeCamPos.CFrame = workspace.CurrentCamera.CFrame
            FreeCamPos.Parent = workspace
        else
            if LHRP then LHRP.Anchored = true end
            LP.CameraMaxZoomDistance = 1
            workspace.CurrentCamera.CameraSubject = workspace.FreeCamPos
            workspace.CurrentCamera.CameraType = Enum.CameraType.Custom

            workspace.FreeCamPos.CFrame = CFrame.new(workspace.FreeCamPos.CFrame.Position, workspace.FreeCamPos.CFrame.Position + Vector3.new(workspace.CurrentCamera.CFrame.LookVector.X, workspace.CurrentCamera.CFrame.LookVector.Y, workspace.CurrentCamera.CFrame.LookVector.Z))
            workspace.CurrentCamera.CFrame = workspace.FreeCamPos.CFrame

            if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                workspace.FreeCamPos.CFrame = workspace.FreeCamPos.CFrame * CFrame.new(0, 0, -AHSettings.FreeCam.FreeCamSpeed)
            end

            if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                workspace.FreeCamPos.CFrame = workspace.FreeCamPos.CFrame * CFrame.new(0, 0, AHSettings.FreeCam.FreeCamSpeed)
            end

            if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                workspace.FreeCamPos.CFrame = workspace.FreeCamPos.CFrame * CFrame.new(-AHSettings.FreeCam.FreeCamSpeed, 0, 0)
            end

            if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                workspace.FreeCamPos.CFrame = workspace.FreeCamPos.CFrame * CFrame.new(AHSettings.FreeCam.FreeCamSpeed, 0, 0)
            end
        end
    else
        if workspace:FindFirstChild('FreeCamPos') then
            workspace.FreeCamPos:Destroy()
            if LHRP then LHRP.Anchored = false end
            LP.CameraMaxZoomDistance = 30
            if LHUM then workspace.CurrentCamera.CameraSubject = LHUM end
            workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
            LP.CameraMode = Enum.CameraMode.Classic
        end
    end

    -- Fly
    if AHSettings.Fly.Enabled == true and AHSettings.Autofarm.Enabled == false and AHVars.TPTargetPos == nil and LHRP and LHUM then
        local FlightVelocity = nil; if LHRP:FindFirstChild('FlightVelocity') then FlightVelocity = LHRP.FlightVelocity else FlightVelocity = Instance.new('BodyVelocity') end
        FlightVelocity.Name = 'FlightVelocity'
        FlightVelocity.Velocity = Vector3.zero
        FlightVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        FlightVelocity.Parent = LHRP

        local FlightGyro = nil; if LHRP:FindFirstChild('FlightGyro') then FlightGyro = LHRP.FlightGyro else FlightGyro = Instance.new('BodyGyro') end
        FlightGyro.Name = 'FlightGyro'
        FlightGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
        FlightGyro.D = 100
        FlightGyro.P = 3000
        FlightGyro.Parent = LHRP

        LHUM.PlatformStand = true
        FlightVelocity.Velocity = FlyHandler() * AHVars.MaxSpeed
        FlightGyro.CFrame = CFrame.new(LHRP.CFrame.Position, LHRP.CFrame.Position + Vector3.new(workspace.CurrentCamera.CFrame.LookVector.X, workspace.CurrentCamera.CFrame.LookVector.Y, workspace.CurrentCamera.CFrame.LookVector.Z))

        if AHSettings.Fly.Mode == 'Fling' then
            if (AHVars.Frame % 2) == 0 then
                LHRP.Velocity = Vector3.new(LHRP.Velocity.X, 9999, LHRP.Velocity.Z)
            else
                LHRP.Velocity = Vector3.new(LHRP.Velocity.X, -9999, LHRP.Velocity.Z)
            end
        end
    else
        if LHRP then
            if LHRP:FindFirstChild('FlightVelocity') then
                LHRP.FlightVelocity:Destroy()
                if LHUM and not IsLarvae then
                    LHUM.PlatformStand = false
                end
            end

            if LHRP:FindFirstChild('FlightGyro') then
                LHRP.FlightGyro:Destroy()
            end
        end
    end

    -- Infinite Camera Zoom
    if AHSettings.InfCameraZoom == true then
        if AHSettings.FreeCam.Enabled == false then LP.CameraMaxZoomDistance = math.huge end
    else
        if AHSettings.FreeCam.Enabled == false then LP.CameraMaxZoomDistance = 30 end
    end

    -- Fly Jump
    if AHSettings.FlyJump == true and LHRP and LHUM and LHUM.Jump == true then
        SetCharacterVelocity(Vector3.new(LHRP.Velocity.X, LHUM.JumpPower, LHRP.Velocity.Z))
    end

    -- Jump As Queen
    if LHUM and LC.Parent.Name == 'Queen' and not LC:FindFirstChild('Wings') then
        if AHSettings.JumpAsQueen == true then
            LHUM.JumpPower = 50
        else
            LHUM.JumpPower = 0
        end
    end

    -- Target TP Pos
    if AHVars.TPTargetPos ~= nil and LHRP then
        LHRP.CFrame = CFrame.new(AHVars.TPTargetPos)
        AHVars.TPTargetPos = nil
    --     if (AHVars.TPTargetPos - LHRP.Position).Magnitude <= 1 then
    --         AHVars.TPTargetPos = nil
    --         LHRP.Velocity = Vector3.zero
    --     else
    --         local TargetTPPosVelocity = nil; if LHRP:FindFirstChild('TargetTPPosVelocity') then TargetTPPosVelocity = LHRP.TargetTPPosVelocity else TargetTPPosVelocity = Instance.new('BodyVelocity') end
    --         TargetTPPosVelocity.Name = 'TargetTPPosVelocity'
    --         TargetTPPosVelocity.Velocity = (AHVars.TPTargetPos - LHRP.Position).Unit * AHVars.MaxSpeed
    --         TargetTPPosVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    --         TargetTPPosVelocity.Parent = LHRP

    --         LHUM.PlatformStand = true
    --     end
    -- else
    --     AHVars.TPTargetPos = nil

    --     if LHRP then
    --         if LHRP:FindFirstChild('TargetTPPosVelocity') then
    --             LHRP.TargetTPPosVelocity:Destroy()
    --             if LHUM and not IsLarvae then
    --                 LHUM.PlatformStand = false
    --             end
    --         end
    --     end
    end

    -- KillAura
    if AHSettings.KillAura == true and AHSettings.Autofarm.Enabled == false and LHRP and not IsLarvae then
        local ClosestCharacter = nil

        local OverlapParam = OverlapParams.new()
        OverlapParam.FilterDescendantsInstances = {}
        OverlapParam.FilterType = Enum.RaycastFilterType.Exclude

        local Radius = (LHRP.Size.X + LHRP.Size.Y + LHRP.Size.Z) * 5
        local PartsInRadius = workspace:GetPartBoundsInRadius(LHRP.Position, Radius, OverlapParam)

        for i, v in PartsInRadius do
            if v:FindFirstAncestorWhichIsA('Folder') and v:FindFirstAncestorWhichIsA('Folder') == LC:FindFirstAncestorWhichIsA('Folder') and not LC:IsDescendantOf(workspace.Special) then continue end

            if not v:IsDescendantOf(LC) and v.Parent:FindFirstChild('HumanoidRootPart') and v.Parent:FindFirstChild('Humanoid') then
                if ClosestCharacter ~= nil then
                    if (LHRP.Position - ClosestCharacter.HumanoidRootPart.Position).Magnitude > (LHRP.Position - v.Parent.HumanoidRootPart.Position).Magnitude then
                        ClosestCharacter = v.Parent
                    end
                else
                    ClosestCharacter = v.Parent
                end
            end
        end

        if ClosestCharacter ~= nil then
            BiteRemote:FireServer('heavy', ClosestCharacter.Humanoid)
        end
    end

    -- Anti Void
    if AHSettings.AntiVoid == true and LHRP then
        if LHRP.Position.Y < -400 then
            SetCharacterVelocity(Vector3.zero)
            LC:PivotTo(CFrame.new(LHRP.Position.X, -400, LHRP.Position.Z))
        end
    end

    -- Auto Spawn If No Queen
    if AHSettings.AutoSpawnIfNoQueen.Carp == true and #workspace.Ant['Carpenter Ant'].Queen:GetChildren() == 0 then
        local CanAutoSpawnIfNoQueen = true

        if LHRP and LC.Parent.Name == 'Queen' then
            CanAutoSpawnIfNoQueen = false
        end

        if CanAutoSpawnIfNoQueen == true then
            ReplicatedStorage.Remotes.SpawnPlayer:InvokeServer({['colony'] = 'Carpenter Ant', ['class'] = 'Ant', ['species'] = 'Ant'})
        end
    end

    if AHSettings.AutoSpawnIfNoQueen.Fire == true and #workspace.Ant['Fire Ant'].Queen:GetChildren() == 0 then
        local CanAutoSpawnIfNoQueen = true

        if LHRP and LC.Parent.Name == 'Queen' then
            CanAutoSpawnIfNoQueen = false
        end

        if CanAutoSpawnIfNoQueen == true then
            ReplicatedStorage.Remotes.SpawnPlayer:InvokeServer({['colony'] = 'Fire Ant', ['class'] = 'Ant', ['species'] = 'Ant'})
        end
    end

    if AHSettings.AutoSpawnIfNoQueen.YCA == true and #workspace.Ant['Yellow Crazy Ant'].Queen:GetChildren() == 0 then
        local CanAutoSpawnIfNoQueen = true

        if LHRP and LC.Parent.Name == 'Queen' then
            CanAutoSpawnIfNoQueen = false
        end

        if CanAutoSpawnIfNoQueen == true then
            ReplicatedStorage.Remotes.SpawnPlayer:InvokeServer({['colony'] = 'Yellow Crazy Ant', ['class'] = 'Ant', ['species'] = 'Ant'})
        end
    end

    -- Auto Spawn
    if AHSettings.AutoSpawn.Carp == true and not LHUM then
        ReplicatedStorage.Remotes.SpawnPlayer:InvokeServer({['colony'] = 'Carpenter Ant', ['class'] = 'Ant', ['species'] = 'Ant'})
    end

    if AHSettings.AutoSpawn.Fire == true and not LHUM then
        ReplicatedStorage.Remotes.SpawnPlayer:InvokeServer({['colony'] = 'Fire Ant', ['class'] = 'Ant', ['species'] = 'Ant'})
    end

    if AHSettings.AutoSpawn.YCA == true and not LHUM then
        ReplicatedStorage.Remotes.SpawnPlayer:InvokeServer({['colony'] = 'Yellow Crazy Ant', ['class'] = 'Ant', ['species'] = 'Ant'})
    end

    -- Autofarm
    if AHSettings.Autofarm.Enabled == true then
        if LHUM and LHRP and not IsLarvae then
            local ClosestCharacter = nil
            local RegularAntList = {'Worker', 'Soldier', 'Major', 'Super Major', 'Alate'}

            for i, v in CollectionService:GetTagged('Character') do
                if v and v ~= LC and v:FindFirstChild('Humanoid') and v:FindFirstChild('HumanoidRootPart') then
                    if AHSettings.Autofarm.KillDelay == true then continue end
                    if AHSettings.Autofarm.FarmBeetleLarvaes == false and Players:GetPlayerFromCharacter(v) == nil then continue end
                    if AHSettings.Autofarm.FarmPlayers == false and Players:GetPlayerFromCharacter(v) ~= nil then continue end

                    if AHSettings.Autofarm.FarmBeetleLarvaes == true and Players:GetPlayerFromCharacter(v) == nil then
                        if v.Name ~= 'Larvae' then continue end
                    end

                    if AHSettings.Autofarm.FarmPlayers == true and Players:GetPlayerFromCharacter(v) ~= nil then
                        if v:FindFirstAncestorWhichIsA('Folder') and v:FindFirstAncestorWhichIsA('Folder') == LC:FindFirstAncestorWhichIsA('Folder') and not LC:IsDescendantOf(workspace.Special) then continue end
                        if AHSettings.Autofarm.IgnoreCarp == true and v:IsDescendantOf(workspace.Ant['Carpenter Ant']) then continue end
                        if AHSettings.Autofarm.IgnoreFire == true and v:IsDescendantOf(workspace.Ant['Fire Ant']) then continue end
                        if AHSettings.Autofarm.IgnoreYCA == true and v:IsDescendantOf(workspace.Ant['Yellow Crazy Ant']) then continue end
                        if AHSettings.Autofarm.IgnoreSpider == true and v:IsDescendantOf(workspace.Special) then continue end
                        if AHSettings.Autofarm.IgnoreQueens == true and v.Parent.Name == 'Queen' then continue end
                        if AHSettings.Autofarm.IgnoreAnts == true and table.find(RegularAntList, v.Parent.Name) then continue end
                        if AHSettings.Autofarm.IgnoreLarvaes == true and v:FindFirstChild('Reward') then continue end
                    end
                    
                    if ClosestCharacter ~= nil then
                        if v.HumanoidRootPart.Position.Y > -100 and (LHRP.Position - ClosestCharacter.HumanoidRootPart.Position).Magnitude > (LHRP.Position - v.HumanoidRootPart.Position).Magnitude then
                            ClosestCharacter = v
                        end
                    else
                        ClosestCharacter = v
                    end
                end
            end

            if AHSettings.Autofarm.HideUsername == true and not LC:IsDescendantOf(workspace.Special) then
                local OverlapParam = OverlapParams.new()
                OverlapParam.FilterDescendantsInstances = {workspace.Carcasses}
                OverlapParam.FilterType = Enum.RaycastFilterType.Include

                local PartsInRadius = workspace:GetPartBoundsInRadius(LC.Head.Mouth.WorldCFrame.Position, 0.1, OverlapParam)

                if #PartsInRadius == 0 then
                    for i, v in workspace.Carcasses:GetChildren() do
                        if v.Name == 'Larvae' then
                            local Target = nil
                    
                            if v:FindFirstChild('Head') and v.Head.Picked.Value == false and v.Head.Size.Y > 3.6 then
                                Target = v.Head
                            end
                    
                            if Target ~= nil then
                                firetouchinterest(LHRP, Target, 0)
                                BiteRemote:FireServer('heavy', Target)
                                firetouchinterest(LHRP, Target, 1)
                            end
                        end
                    end
                end
            end

            if ClosestCharacter ~= nil then
                local OverlapParam = OverlapParams.new()
                OverlapParam.FilterDescendantsInstances = {ClosestCharacter}
                OverlapParam.FilterType = Enum.RaycastFilterType.Include

                local Radius = (LHRP.Size.X + LHRP.Size.Y + LHRP.Size.Z)
                local PartsInRadius = workspace:GetPartBoundsInRadius(LHRP.Position, Radius, OverlapParam)

                LHUM.WalkSpeed = 35

                if AHSettings.Autofarm.HideUsername == true then
                    LHRP.CFrame = CFrame.lookAt(LHRP.Position, Vector3.new(ClosestCharacter.HumanoidRootPart.Position.X, LHRP.Position.Y, ClosestCharacter.HumanoidRootPart.Position.Z)) * CFrame.Angles(0, math.pi, 0)
                else
                    LHRP.CFrame = CFrame.lookAt(LHRP.Position, Vector3.new(ClosestCharacter.HumanoidRootPart.Position.X, LHRP.Position.Y, ClosestCharacter.HumanoidRootPart.Position.Z))
                end

                if LHRP.Position.X >= ClosestCharacter.HumanoidRootPart.Position.X - 10 and LHRP.Position.X <= ClosestCharacter.HumanoidRootPart.Position.X + 10 and LHRP.Position.Z >= ClosestCharacter.HumanoidRootPart.Position.Z - 10 and LHRP.Position.Z <= ClosestCharacter.HumanoidRootPart.Position.Z + 10 then
                    if LHRP.Position.Y > ClosestCharacter.HumanoidRootPart.Position.Y then
                        LHRP.CFrame = LHRP.CFrame - Vector3.yAxis * 0.5
                    end
                end

                if LHRP.Position.X >= ClosestCharacter.HumanoidRootPart.Position.X - 100 and LHRP.Position.X <= ClosestCharacter.HumanoidRootPart.Position.X + 100 and LHRP.Position.Z >= ClosestCharacter.HumanoidRootPart.Position.Z - 100 and LHRP.Position.Z <= ClosestCharacter.HumanoidRootPart.Position.Z + 100 then
                    BiteRemote:FireServer('heavy', ClosestCharacter.Humanoid)

                    LHUM:MoveTo(ClosestCharacter.HumanoidRootPart.Position + Vector3.new(math.random(-25, 25), 0, math.random(-25, 25)))

                    if LHRP.Position.Y < ClosestCharacter.HumanoidRootPart.Position.Y then
                        SetCharacterVelocity(Vector3.new(LHRP.Velocity.X, math.random(25, 50), LHRP.Velocity.Z))
                    end

                    if #PartsInRadius > 0 then
                        LHUM:MoveTo((CFrame.new(LHRP.Position, ClosestCharacter.HumanoidRootPart.Position) * CFrame.new(0, 0, 100)).Position)
                    end     
                else
                    LHUM:MoveTo(ClosestCharacter.HumanoidRootPart.Position + Vector3.new(math.random(-100, 100), 0, math.random(-100, 100)))

                    if LHRP.Position.Y < 0 then
                        SetCharacterVelocity(Vector3.new(LHRP.Velocity.X, math.random(25, 50), LHRP.Velocity.Z))
                    end
                end
            else
                if LHRP.Position.Y < 100 then
                    SetCharacterVelocity(Vector3.new(LHRP.Velocity.X, math.random(25, 50), LHRP.Velocity.Z))
                end

                LHUM:MoveTo(LHRP.Position + Vector3.new(math.random(-500, 500), 0, math.random(-500, 500)))
            end
        end
    end

    for i, v in Players:GetPlayers() do

        -- Leaving On Mod Join  
        if AHSettings.LeaveOnModJoin == true then
            pcall(function()
                if v:GetRankInGroup(4525406) > 7 then
                    LP:Destroy()
                end
            end)
        end
        
    end

    for i, v in CollectionService:GetTagged('Character') do

        -- Carpenter Ant ESP
        if v:IsDescendantOf(workspace.Ant['Carpenter Ant']) and v ~= LC then
            if AHSettings.ESP.Carp == true then
                CreateESP(v, Color3.fromRGB(0, 0, 0))  
            else
                RemoveESP(v)
            end
        end

        -- Fire Ant ESP
        if v:IsDescendantOf(workspace.Ant['Fire Ant']) and v ~= LC then
            if AHSettings.ESP.Fire == true then
                CreateESP(v, Color3.fromRGB(255, 0, 0))  
            else
                RemoveESP(v)
            end
        end

        -- Yellow Crazy Ant ESP
        if v:IsDescendantOf(workspace.Ant['Yellow Crazy Ant']) and v ~= LC then
            if AHSettings.ESP.YCA == true then
                CreateESP(v, Color3.fromRGB(255, 255, 0))  
            else
                RemoveESP(v)
            end
        end

        -- Spider ESP
        if v:IsDescendantOf(workspace.Special) and v ~= LC then
            if AHSettings.ESP.Spider == true then
                if v:IsDescendantOf(workspace.Special.Spider) or v:IsDescendantOf(workspace.Special.Spiderling) then
                    CreateESP(v, Color3.fromRGB(57, 57, 57))
                elseif v:IsDescendantOf(workspace.Special.BroodMother) then
                    CreateESP(v, Color3.fromRGB(0, 0, 0))
                end
            else
                RemoveESP(v)
            end
        end

        -- Beetle Larvae ESP
        if v:IsDescendantOf(workspace.AIC) then
            if AHSettings.ESP.BeetleLarvae == true then
                CreateESP(v, Color3.fromRGB(218, 133, 65))  
            else
                RemoveESP(v)
            end
        end

    end

    for i, v in workspace.Carcasses:GetChildren() do

        -- Infinite Hunger + Thirst
        if (AHSettings.InfHungerThirst == true or AHSettings.Autofarm.Enabled == true) and LHRP and not LC:IsDescendantOf(workspace.Special.BroodMother) and LC:FindFirstChild('Configuration') and LC.Configuration.Hunger.Value < LC.Configuration.maxHunger.Value and v.Name == 'Larvae' then
            local Target = nil
    
            if v:FindFirstChild('Head') and v.Head.Picked.Value == false then
                Target = v.Head
            elseif v:FindFirstChild('Torso') and v.Torso.Picked.Value == false then
                Target = v.Torso
            end
    
            if Target ~= nil then
                Target.Anchored = true
                Target.CanCollide = false
                Target.CFrame = LHRP.CFrame + Vector3.yAxis * (LHRP.Size.Y + Target.Size.Y)
                firetouchinterest(LHRP, Target, 0)
                BiteRemote:FireServer('light', Target)
                firetouchinterest(LHRP, Target, 1)
            end
        end

        -- Removing Ant Corpses
        if AHSettings.RemoveAntCorpses == true then
            if v.Name == 'Food' and v:FindFirstChild('Abdomen') then
                v:Destroy()
            end
        end

        -- Removing Ant Larvae Corpses
        if AHSettings.RemoveAntLarvaeCorpses == true and AHSettings.Autofarm.Enabled == false then
            if v.Name == 'Food' and v:FindFirstChild('Torso') and v.Torso.Color == Color3.fromRGB(165, 161, 127) then
                v:Destroy()
            end

            if v.Name == 'Food' and v:FindFirstChild('Cocoon') then
                v:Destroy()
            end
        end

        -- Removing Beetle Larvae ESP
        if v.Name == 'Larvae' then
            RemoveESP(v)
        end
        
    end

    -- Fast Eat
    if AHSettings.FastEat == true and LHRP and LC:FindFirstChild('Configuration') and (LC:IsDescendantOf(workspace.Special.BroodMother) or LC.Configuration.Hunger.Value < LC.Configuration.maxHunger.Value) then
        local OverlapParam = OverlapParams.new()
        OverlapParam.FilterDescendantsInstances = {}
        OverlapParam.FilterType = Enum.RaycastFilterType.Exclude

        local Radius = (LHRP.Size.X + LHRP.Size.Y + LHRP.Size.Z) * 2
        local PartsInRadius = workspace:GetPartBoundsInRadius(LHRP.Position, Radius, OverlapParam)

        for i, v in PartsInRadius do
            if not v:IsDescendantOf(workspace.Carcasses) then continue end
            if LC:FindFirstChild('Carrier') and LC.Carrier.Transparency == 0 then continue end
            if LC:IsDescendantOf(workspace.Special.BroodMother) and v:FindFirstAncestorWhichIsA('Model') and v:FindFirstAncestorWhichIsA('Model').Name ~= 'Spider' then continue end

            BiteRemote:FireServer('light', v)
        end
    end

    -- Fast Drink
    if AHSettings.FastDrink == true and LHUM then
        if LC:FindFirstChild('Configuration') and LC.Configuration:WaitForChild('Thirst').Value ~= LC.Configuration:WaitForChild('maxThirst').Value then
           BiteRemote:FireServer('light', 'Water') -- ik raycasts exist but that would just be even more laggy 
        end
    end

end)

LP.leaderstats.Protein.Changed:Connect(function() -- protein = kills
    if AHSettings.Autofarm.KillDelayWaitTime > 0 then
        AHSettings.Autofarm.KillDelay = true
        task.wait(AHSettings.Autofarm.KillDelayWaitTime)
        AHSettings.Autofarm.KillDelay = false
    end

    AHVars.KillTimer = 0
end)

TagInstance()
workspace.DescendantAdded:Connect(function(desc)
    task.wait(1)
    TagInstance(desc)
end)

if workspace.Spawns:FindFirstChildOfClass('SpawnLocation') then
    workspace.Spawns:FindFirstChildOfClass('SpawnLocation'):Destroy()
end

--// UI LIBRARY
local UIConfig = {
    WindowName = 'AntHaxx V6.8.4',
    Color = Color3.fromRGB(200, 0, 0),
    Keybind = Enum.KeyCode.LeftAlt
}

local UILibrary = loadstring(game:HttpGet('https://raw.githubusercontent.com/TestAccount69420xd/7632755652/main/UILib'))()
local Window = UILibrary:CreateWindow(UIConfig, CoreGui)

--// TABS
local HomeTab = Window:CreateTab('Home')
local PlayerTab = Window:CreateTab('Player')
local ColonyTab = Window:CreateTab('Colonies')
local FarmTab = Window:CreateTab('Farming')
local CombatTab = Window:CreateTab('Combat')
local VisualTab = Window:CreateTab('Visuals')
local SettingsTab = Window:CreateTab('Settings')

--// SECTIONS
local HomeTab_Info = HomeTab:CreateSection('AntHaxx Info')
local HomeTab_LoadedScripts = HomeTab:CreateSection('Loaded Scripts')

local PlayerTab_Ant = PlayerTab:CreateSection('Ant Mods')
local PlayerTab_Larvae = PlayerTab:CreateSection('Larvae Mods')

local ColonyTab_CarpAnts = ColonyTab:CreateSection('Carpenter Ants')
local ColonyTab_FireAnts = ColonyTab:CreateSection('Fire Ants')
local ColonyTab_YCAnts = ColonyTab:CreateSection('Yellow Crazy Ants')
local ColonyTab_Spiders = ColonyTab:CreateSection('Spiders')

local FarmTab_PlayerFarm = FarmTab:CreateSection('Player Autofarm')
local FarmTab_BeetleLarvaeFarm = FarmTab:CreateSection('Beetle Larvae Autofarm')
local FarmTab_GlobalSettings = FarmTab:CreateSection('Global Settings')

local CombatTab_Attack = CombatTab:CreateSection('Attack')

local VisualTab_ESP = VisualTab:CreateSection('ESP')
local VisualTab_ClientMods = VisualTab:CreateSection('ClientSided Mods')

local SettingsTab_UI = SettingsTab:CreateSection('UI Settings')
local SettingsTab_Other = SettingsTab:CreateSection('Other Settings')

--// HOME TAB
HomeTab_Info:CreateLabel('Game\nAnt Life V2\n')
HomeTab_Info:CreateLabel('Script Version\n6.8.4\n')
HomeTab_Info:CreateLabel('Discord Server\ndiscord.gg/anfCx638Fh')

HomeTab_LoadedScripts:CreateLabel('Anti AFK')
HomeTab_LoadedScripts:CreateLabel('Anti Camera Glitch')
HomeTab_LoadedScripts:CreateLabel('Hold F To Dig')
HomeTab_LoadedScripts:CreateLabel('H Force Place Dirt')
HomeTab_LoadedScripts:CreateLabel('/a Announcement Prefix')
HomeTab_LoadedScripts:CreateLabel('No Spider Spawn Cooldown')

--// PLAYER TAB
PlayerTab_Ant:CreateTextBox('Heavy Bite Charge Time', 'Type \'re\' to reset to default', false, function(val)
    if LHUM and LC:FindFirstChild('Configuration') then
        if val == 're' then
            if LC:FindFirstAncestorWhichIsA('Folder').Name == 'Carpenter Ant' then
                LC.Configuration.attackCooldown.Value = 2
            else
                LC.Configuration.attackCooldown.Value = 1
            end
        else
            if tonumber(val) then
                LC.Configuration.attackCooldown.Value = val
            end
        end
    end
end)

local InfHungerFoodToopTip = PlayerTab_Ant:CreateToggle('‚ö†Ô∏è Infinite Hunger + Thirst', AHSettings.InfHungerThirst, function(val)
    AHSettings.InfHungerThirst = val
end) InfHungerFoodToopTip:AddToolTip('‚ö†Ô∏è Needs beetle larvae corpses to work\n‚ö†Ô∏è Doesn\'t work as BroodMother')

PlayerTab_Ant:CreateToggle('Fast Eat', AHSettings.FastEat, function(val)
    AHSettings.FastEat = val
end)

PlayerTab_Ant:CreateToggle('Fast Drink', AHSettings.FastDrink, function(val)
    AHSettings.FastDrink = val
end)

PlayerTab_Ant:CreateToggle('Water Noclip', AHSettings.WaterNoclip, function(val)
    AHSettings.WaterNoclip = val
end)

PlayerTab_Ant:CreateToggle('Noclip', AHSettings.Noclip, function(val)
    AHSettings.Noclip = val
end)

PlayerTab_Ant:CreateToggle('C + Click TP', AHSettings.CClickTP, function(val)
    AHSettings.CClickTP = val
end)

PlayerTab_Ant:CreateToggle('Infinite Jump', AHSettings.InfJump, function(val)
    AHSettings.InfJump = val
end)

PlayerTab_Ant:CreateToggle('Fly Jump', AHSettings.FlyJump, function(val)
    AHSettings.FlyJump = val
end)

PlayerTab_Ant:CreateToggle('Jump As Queen', AHSettings.JumpAsQueen, function(val)
    AHSettings.JumpAsQueen = val
end)

PlayerTab_Ant:CreateSlider('Speed Multiplier', 1, 1.75, AHSettings.SpeedMultiplier, false, function(val)
    AHSettings.SpeedMultiplier = val
end)

local FlyBind = PlayerTab_Ant:CreateToggle('Fly', AHSettings.Fly.Enabled, function(val)
    AHSettings.Fly.Enabled = val
end) FlyBind:CreateKeybind(tostring('V'):gsub('Enum.KeyCode.', ''), function(key) end)

PlayerTab_Ant:CreateSlider('Fly Speed', 1, AHVars.MaxSpeed, AHSettings.Fly.FlySpeed, false, function(val)
    AHSettings.Fly.FlySpeed = val
end)

PlayerTab_Ant:CreateDropdown('Fly Mode', {'Normal', 'Fling'}, function(opt)
    AHSettings.Fly.Mode = opt
end)

PlayerTab_Larvae:CreateToggle('Instantly Eat Trophs', AHSettings.InstantEatTroph, function(val)
    AHSettings.InstantEatTroph = val
end)

--// COLONY TAB
local CarpQueenAmount = ColonyTab_CarpAnts:CreateLabel('Queens: ?')
local CarpAlateAmount = ColonyTab_CarpAnts:CreateLabel('Alates: ?')
local CarpSMAmount = ColonyTab_CarpAnts:CreateLabel('Super Majors: ?')
local CarpMajorAmount = ColonyTab_CarpAnts:CreateLabel('Majors: ?')
local CarpWorkerAmount = ColonyTab_CarpAnts:CreateLabel('Workers: ?')
local CarpLarvaeAmount = ColonyTab_CarpAnts:CreateLabel('Larvae: ?')
local CarpEggAmount = ColonyTab_CarpAnts:CreateLabel('Eggs: ?')

ColonyTab_CarpAnts:CreateButton('Goto Queen 1', function()
    if #workspace.Ant['Carpenter Ant'].Queen:GetChildren() ~= 0 and LHRP and LHUM then
        AHVars.TPTargetPos = workspace.Ant['Carpenter Ant'].Queen:GetChildren()[1].HumanoidRootPart.Position
    end
end)

ColonyTab_CarpAnts:CreateButton('Goto Queen 2', function()
    if #workspace.Ant['Carpenter Ant'].Queen:GetChildren() == 2 and LHRP and LHUM then
        AHVars.TPTargetPos = workspace.Ant['Carpenter Ant'].Queen:GetChildren()[2].HumanoidRootPart.Position
    end
end)

ColonyTab_CarpAnts:CreateToggle('Auto Spawn If No Queen', AHSettings.AutoSpawnIfNoQueen.Carp, function(val)
    AHSettings.AutoSpawnIfNoQueen.Carp = val
end)

ColonyTab_CarpAnts:CreateToggle('Auto Spawn', AHSettings.AutoSpawn.Carp, function(val)
    AHSettings.AutoSpawn.Carp = val
end)

local FireQueenAmount = ColonyTab_FireAnts:CreateLabel('Queens: ?')
local FireAlateAmount = ColonyTab_FireAnts:CreateLabel('Alates: ?')
local FireSoldierAmount = ColonyTab_FireAnts:CreateLabel('Soldiers: ?')
local FireWorkerAmount = ColonyTab_FireAnts:CreateLabel('Workers: ?')
local FireLarvaeAmount = ColonyTab_FireAnts:CreateLabel('Larvae: ?')
local FireEggAmount = ColonyTab_FireAnts:CreateLabel('Eggs: ?')

ColonyTab_FireAnts:CreateButton('Goto Queen 1', function()
    if #workspace.Ant['Fire Ant'].Queen:GetChildren() ~= 0 and LHRP and LHUM then
        AHVars.TPTargetPos = workspace.Ant['Fire Ant'].Queen:GetChildren()[1].HumanoidRootPart.Position
    end
end)

ColonyTab_FireAnts:CreateButton('Goto Queen 2', function()
    if #workspace.Ant['Fire Ant'].Queen:GetChildren() == 2 and LHRP and LHUM then
        AHVars.TPTargetPos = workspace.Ant['Fire Ant'].Queen:GetChildren()[2].HumanoidRootPart.Position
    end
end)

ColonyTab_FireAnts:CreateToggle('Auto Spawn If No Queen', AHSettings.AutoSpawnIfNoQueen.Fire, function(val)
    AHSettings.AutoSpawnIfNoQueen.Fire = val
end)

ColonyTab_FireAnts:CreateToggle('Auto Spawn', AHSettings.AutoSpawn.Fire, function(val)
    AHSettings.AutoSpawn.Fire = val
end)

local YCQueenAmount = ColonyTab_YCAnts:CreateLabel('Queens: ?')
local YCAlateAmount = ColonyTab_YCAnts:CreateLabel('Alates: ?')
local YCSoldierAmount = ColonyTab_YCAnts:CreateLabel('Soldiers: ?')
local YCWorkerAmount = ColonyTab_YCAnts:CreateLabel('Workers: ?')
local YCLarvaeAmount = ColonyTab_YCAnts:CreateLabel('Larvae: ?')
local YCEggAmount = ColonyTab_YCAnts:CreateLabel('Eggs: ?')

ColonyTab_YCAnts:CreateButton('Goto Queen 1', function()
    if #workspace.Ant['Yellow Crazy Ant'].Queen:GetChildren() ~= 0 and LHRP and LHUM then
        AHVars.TPTargetPos = workspace.Ant['Yellow Crazy Ant'].Queen:GetChildren()[1].HumanoidRootPart.Position
    end
end)

ColonyTab_YCAnts:CreateButton('Goto Queen 2', function()
    if #workspace.Ant['Yellow Crazy Ant'].Queen:GetChildren() == 2 and LHRP and LHUM then
        AHVars.TPTargetPos = workspace.Ant['Yellow Crazy Ant'].Queen:GetChildren()[2].HumanoidRootPart.Position
    end
end)

ColonyTab_YCAnts:CreateToggle('Auto Spawn If No Queen', AHSettings.AutoSpawnIfNoQueen.YCA, function(val)
    AHSettings.AutoSpawnIfNoQueen.YCA = val
end)

ColonyTab_YCAnts:CreateToggle('Auto Spawn', AHSettings.AutoSpawn.YCA, function(val)
    AHSettings.AutoSpawn.YCA = val
end)

local BroodMotherAmount = ColonyTab_Spiders:CreateLabel('BroodMothers: ?')
local SpiderAmount = ColonyTab_Spiders:CreateLabel('Spiders: ?')
local SpiderlingAmount = ColonyTab_Spiders:CreateLabel('Spiderlings: ?')

--// FARM TAB
FarmTab_PlayerFarm:CreateLabel('WIP')
-- FarmTab_PlayerFarm:CreateToggle('Enabled', false, function(val)
-- 	AHSettings.Autofarm.FarmPlayers = val

--     if val == false then
--         AHVars.TPTargetPos = nil
--     end
-- end)

-- FarmTab_PlayerFarm:CreateToggle('Ignore Carpenter Ants', false, function(val)
-- 	AHSettings.Autofarm.IgnoreCarp = val
-- end)

-- FarmTab_PlayerFarm:CreateToggle('Ignore Fire Ants', false, function(val)
-- 	AHSettings.Autofarm.IgnoreFire = val
-- end)

-- FarmTab_PlayerFarm:CreateToggle('Ignore Yellow Crazy Ants', false, function(val)
-- 	AHSettings.Autofarm.IgnoreYCA = val
-- end)

-- FarmTab_PlayerFarm:CreateToggle('Ignore Spiders', false, function(val)
-- 	AHSettings.Autofarm.IgnoreSpider = val
-- end)

-- FarmTab_PlayerFarm:CreateToggle('Ignore Queens', true, function(val)
-- 	AHSettings.Autofarm.IgnoreQueens = val
-- end)

-- FarmTab_PlayerFarm:CreateToggle('Ignore Regular Ants', false, function(val)
-- 	AHSettings.Autofarm.IgnoreAnts = val
-- end)

-- FarmTab_PlayerFarm:CreateToggle('Ignore Larvaes', false, function(val)
-- 	AHSettings.Autofarm.IgnoreLarvaes = val
-- end)

FarmTab_GlobalSettings:CreateLabel('WIP')
-- local AutofarmHideUsernameToolTip = FarmTab_GlobalSettings:CreateToggle('‚ö†Ô∏è Hide Username', false, function(val)
-- 	AHSettings.Autofarm.HideUsername = val
-- end) AutofarmHideUsernameToolTip:AddToolTip('‚ö†Ô∏è Needs Beetle Larvae heads to work\n‚ö†Ô∏è USE YELLOW WORKER, PROBABLY WON\'T WORK WITH OTHER ANTS')

-- FarmTab_GlobalSettings:CreateSlider('Kill Delay (seconds)', 0, 60, 0, true, function(val)
--     AHSettings.Autofarm.KillDelayWaitTime = val
-- end)

FarmTab_BeetleLarvaeFarm:CreateLabel('WIP')
-- FarmTab_BeetleLarvaeFarm:CreateToggle('Enabled', false, function(val)
-- 	AHSettings.Autofarm.FarmBeetleLarvaes = val

--     if val == false then
--         AHVars.TPTargetPos = nil
--     end
-- end)

--// COMBAT TAB
CombatTab_Attack:CreateToggle('KillAura', AHSettings.KillAura, function(val)
    AHSettings.KillAura = val
end)

--// VISUAL TAB
VisualTab_ESP:CreateToggle('Carpenter Ant ESP', AHSettings.ESP.Carp, function(val)
    AHSettings.ESP.Carp = val
end)

VisualTab_ESP:CreateToggle('Fire Ant ESP', AHSettings.ESP.Fire, function(val)
    AHSettings.ESP.Fire = val
end)

VisualTab_ESP:CreateToggle('Yellow Crazy Ant ESP', AHSettings.ESP.YCA, function(val)
    AHSettings.ESP.YCA = val
end)

VisualTab_ESP:CreateToggle('Spider ESP', AHSettings.ESP.Spider, function(val)
    AHSettings.ESP.Spider = val
end)

VisualTab_ESP:CreateToggle('Beetle Larvae ESP', AHSettings.ESP.BeetleLarvae, function(val)
    AHSettings.ESP.BeetleLarvae = val
end)

VisualTab_ClientMods:CreateToggle('Fullbright', false, function(val)
    Lighting.GlobalShadows = not val
end)

VisualTab_ClientMods:CreateToggle('No Sun Rays', false, function(val)
    Lighting.SunRays.Enabled = not val
end)

VisualTab_ClientMods:CreateToggle('Global Chat', false, function(val)
    if val == true then
        LP.PlayerGui.Chat.Frame.ChatChannelParentFrame.Visible = true
        LP.PlayerGui.Chat.Frame.ChatChannelParentFrame.Size = UDim2.new(0.8, 0, 1.5, 0)
        LP.PlayerGui.Chat.Frame.ChatBarParentFrame.Size = UDim2.new(0.8, 0, 0.35, 0)
        LP.PlayerGui.Chat.Frame.ChatBarParentFrame.Position = UDim2.new(0, 0, 1.5, 0)
    elseif val == false then
        LP.PlayerGui.Chat.Frame.ChatChannelParentFrame.Visible = false
        LP.PlayerGui.Chat.Frame.ChatBarParentFrame.Position = UDim2.new(0, 0, 0, 0)
    end
end)

VisualTab_ClientMods:CreateToggle('Remove Ant Corpses', AHSettings.RemoveAntCorpses, function(val)
    AHSettings.RemoveAntCorpses = val
end)

local RemoveAntLarvaeCorpsesToopTip = VisualTab_ClientMods:CreateToggle('‚ö†Ô∏è Remove Ant Larvae Corpses', AHSettings.RemoveAntLarvaeCorpses, function(val)
    AHSettings.RemoveAntLarvaeCorpses = val
end) RemoveAntLarvaeCorpsesToopTip:AddToolTip('‚ö†Ô∏è Doesn\'t work when autofarming')

VisualTab_ClientMods:CreateToggle('Camera Noclip', false, function(val)
    if val == true then
        LP.DevCameraOcclusionMode = Enum.DevCameraOcclusionMode.Invisicam
    else
        LP.DevCameraOcclusionMode = Enum.DevCameraOcclusionMode.Zoom
    end
end)

VisualTab_ClientMods:CreateToggle('Infinite Camera Zoom Distance', AHSettings.InfCameraZoom, function(val)
    AHSettings.InfCameraZoom = val
end)

local FreeCamBind = VisualTab_ClientMods:CreateToggle('FreeCam', AHSettings.FreeCam.Enabled, function(val)
    AHSettings.FreeCam.Enabled = val
end) FreeCamBind:CreateKeybind(tostring('Z'):gsub('Enum.KeyCode.', ''), function(key) end)

VisualTab_ClientMods:CreateSlider('FreeCam Speed', 1, 10, AHSettings.FreeCam.FreeCamSpeed, true, function(val)
    AHSettings.FreeCam.FreeCamSpeed = val
end)

--// SETTINGS TAB
local UIBind = SettingsTab_UI:CreateToggle('UI Toggle', true, function(val)
    Window:Toggle(val)
end) UIBind:CreateKeybind(tostring(UIConfig.Keybind):gsub('Enum.KeyCode.', ''), function(key) UIConfig.Keybind = Enum.KeyCode[key] end)

SettingsTab_Other:CreateToggle('Leave On Mod Join', AHSettings.LeaveOnModJoin, function(val)
    AHSettings.LeaveOnModJoin = val
end)

SettingsTab_Other:CreateToggle('Anti Void', AHSettings.AntiVoid, function(val)
    AHSettings.AntiVoid = val
end)

--// END
RunService.Heartbeat:Connect(function()

    -- Updating Labels
    CarpQueenAmount:UpdateText('Queens: '..#workspace.Ant['Carpenter Ant'].Queen:GetChildren())
    CarpAlateAmount:UpdateText('Alates: '..#workspace.Ant['Carpenter Ant'].Alate:GetChildren())
    CarpSMAmount:UpdateText('Super Majors: '..#workspace.Ant['Carpenter Ant']['Super Major']:GetChildren())
    CarpMajorAmount:UpdateText('Majors: '..#workspace.Ant['Carpenter Ant'].Major:GetChildren())
    CarpWorkerAmount:UpdateText('Workers: '..#workspace.Ant['Carpenter Ant'].Worker:GetChildren())
    CarpLarvaeAmount:UpdateText('Larvae: '..#workspace.Ant['Carpenter Ant'].Larvae:GetChildren())
    CarpEggAmount:UpdateText('Eggs: '..#workspace.Ant['Carpenter Ant'].Eggs:GetChildren())
    
    FireQueenAmount:UpdateText('Queens: '..#workspace.Ant['Fire Ant'].Queen:GetChildren())
    FireAlateAmount:UpdateText('Alates: '..#workspace.Ant['Fire Ant'].Alate:GetChildren())
    FireSoldierAmount:UpdateText('Soldiers: '..#workspace.Ant['Fire Ant'].Soldier:GetChildren())
    FireWorkerAmount:UpdateText('Workers: '..#workspace.Ant['Fire Ant'].Worker:GetChildren())
    FireLarvaeAmount:UpdateText('Larvae: '..#workspace.Ant['Fire Ant'].Larvae:GetChildren())
    FireEggAmount:UpdateText('Eggs: '..#workspace.Ant['Fire Ant'].Eggs:GetChildren())

    YCQueenAmount:UpdateText('Queens: '..#workspace.Ant['Yellow Crazy Ant'].Queen:GetChildren())
    YCAlateAmount:UpdateText('Alates: '..#workspace.Ant['Yellow Crazy Ant'].Alate:GetChildren())
    YCSoldierAmount:UpdateText('Soldiers: '..#workspace.Ant['Yellow Crazy Ant'].Soldier:GetChildren())
    YCWorkerAmount:UpdateText('Workers: '..#workspace.Ant['Yellow Crazy Ant'].Worker:GetChildren())
    YCLarvaeAmount:UpdateText('Larvae: '..#workspace.Ant['Yellow Crazy Ant'].Larvae:GetChildren())
    YCEggAmount:UpdateText('Eggs: '..#workspace.Ant['Yellow Crazy Ant'].Eggs:GetChildren())

    BroodMotherAmount:UpdateText('BroodMothers: '..#workspace.Special.BroodMother.BroodMother:GetChildren())
    SpiderAmount:UpdateText('Spiders: '..#workspace.Special.Spider.Spider:GetChildren())
    SpiderlingAmount:UpdateText('Spiderlings: '..#workspace.Special.Spiderling.Spiderling:GetChildren())

end)
